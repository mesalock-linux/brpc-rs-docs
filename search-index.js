var N=null,E="",T="t",U="u",searchIndex={};
var R=["brpc_sys","from_iobuf","from_raw_ptr","brpc_sys::ffi","result","try_from","try_into","borrow_mut","borrow","type_id","typeid","brpc_sys::zero_copy","ZeroCopyBuf","ZeroCopyBufMut","BrpcServer","BrpcServerOptions","BrpcChannel","BrpcChannelOptions","BrpcController","BrpcIOBuf","BrpcZeroCopyBuf","BrpcZeroCopyBufMut","brpcresult","brpcerror","default","BrpcError","ServiceOwnership","ChannelOptions","ServerOptions"];
searchIndex["brpc_build"]={"doc":"`brpc-build` compiles `.proto` files for `brpc-rs`.","i":[[5,"compile_protos","brpc_build","Compile .proto files into Rust files during a Cargo build.",N,[[],[R[4]]]]],"p":[]};
searchIndex["brpc_rs"]={"doc":"Apache BRPC is an industrial-grade RPC framework for…","i":[[3,"Channel","brpc_rs","A `Channel` provides a connection to a BRPC server on a…",N,N],[12,"inner",E,E,0,N],[3,R[27],E,"Options for a `Channel`",N,N],[3,"Server",E,"A `Server` provides a BRPC server where multiple BRPC…",N,N],[3,R[28],E,"Options for a `Server`",N,N],[4,R[25],E,E,N,N],[13,"NOERROR",E,E,1,N],[13,"ENOSERVICE",E,E,1,N],[13,"ENOMETHOD",E,E,1,N],[13,"EREQUEST",E,E,1,N],[13,"ERPCAUTH",E,E,1,N],[13,"ETOOMANYFAILS",E,E,1,N],[13,"EPCHANFINISH",E,E,1,N],[13,"EBACKUPREQUEST",E,E,1,N],[13,"ERPCTIMEDOUT",E,E,1,N],[13,"EFAILEDSOCKET",E,E,1,N],[13,"EHTTP",E,E,1,N],[13,"EOVERCROWDED",E,E,1,N],[13,"ERTMPPUBLISHABLE",E,E,1,N],[13,"ERTMPCREATESTREAM",E,E,1,N],[13,"EEOF",E,E,1,N],[13,"EUNUSED",E,E,1,N],[13,"ESSL",E,E,1,N],[13,"EH2RUNOUTSTREAMS",E,E,1,N],[13,"EREJECT",E,E,1,N],[13,"EINTERNAL",E,E,1,N],[13,"ERESPONSE",E,E,1,N],[13,"ELOGOFF",E,E,1,N],[13,"ELIMIT",E,E,1,N],[13,"ECLOSE",E,E,1,N],[13,"EITP",E,E,1,N],[13,"ESERIALIZE",E,E,1,N],[13,"EDESERIALIZE",E,E,1,N],[13,"EFFI",E,E,1,N],[13,"UNKNOWN",E,E,1,N],[4,R[26],E,"Represent server's ownership of services.",N,N],[13,"ServerOwnsService",E,E,2,N],[13,"ServerDoesntOwnService",E,E,2,N],[11,"with_options",E,"Make a `Channel` with the provided socker address and…",0,[[["socketaddr"],["channeloptions"]],["self"]]],[11,"new",E,"Make a `ChannelOptions` with default values.",3,[[],["self"]]],[11,"set_timeout_ms",E,"Set max duration of RPC in milliseconds over this Channel.…",3,[[["self"],["i32"]]]],[11,"set_max_retry",E,"Set retry limit for RPC over this channel. <=0 means no…",3,[[["self"],["i32"]]]],[11,"new",E,"Create a new `Server`",4,[[],["self"]]],[11,"add_service",E,"Add a `Service`. `ownership` represents server's ownership…",4,[[["self"],[T],["serviceownership"]],[R[22]]]],[11,"start",E,"Config a `Server` with the provided TCP port and…",4,[[["self"],["u16"],["serveroptions"]],[R[22]]]],[11,"run",E,"Run a `Server` until asked to quit (e.g CTRL-C).",4,[[["self"]]]],[11,"new",E,"Make a `ServerOptions` with default values.",5,[[],["self"]]],[11,"set_idle_timeout_ms",E,"Notify user when there's no data for at least…",5,[[["self"],["i32"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[10]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[10]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[10]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[10]]]],[11,"to_owned",E,E,1,[[["self"]],[T]]],[11,"clone_into",E,E,1,[[[T],["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[10]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[10]]]],[11,"eq",E,E,1,[[["self"],[R[23]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],[R[23]]]],[11,R[24],E,E,3,[[],["self"]]],[11,R[24],E,E,4,[[],["self"]]],[11,R[24],E,E,5,[[],["self"]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"fmt",E,E,1,[[["self"],["formatter"]],[R[4]]]]],"p":[[3,"Channel"],[4,R[25]],[4,R[26]],[3,R[27]],[3,"Server"],[3,R[28]]]};
searchIndex["brpc_sys"]={"doc":E,"i":[[0,"ffi",R[0],E,N,N],[4,R[14],R[3],E,N,N],[4,R[15],E,E,N,N],[4,R[16],E,E,N,N],[4,R[17],E,E,N,N],[4,R[18],E,E,N,N],[4,R[19],E,E,N,N],[5,"brpc_is_asked_to_quit",E,E,N,N],[5,"brpc_server_new",E,E,N,N],[5,"brpc_server_destroy",E,E,N,N],[5,"brpc_server_add_service",E,E,N,N],[5,"brpc_server_start",E,E,N,N],[5,"brpc_server_run_until_asked_to_quit",E,E,N,N],[5,"brpc_server_options_new",E,E,N,N],[5,"brpc_server_options_destroy",E,E,N,N],[5,"brpc_server_options_set_idle_timeout_ms",E,E,N,N],[5,"brpc_channel_new",E,E,N,N],[5,"brpc_channel_destroy",E,E,N,N],[5,"brpc_channel_init",E,E,N,N],[5,"brpc_channel_options_new",E,E,N,N],[5,"brpc_channel_options_destroy",E,E,N,N],[5,"brpc_channel_options_set_timeout_ms",E,E,N,N],[5,"brpc_channel_options_set_max_retry",E,E,N,N],[5,"brpc_controller_new",E,E,N,N],[5,"brpc_controller_destroy",E,E,N,N],[5,"brpc_controller_failed",E,E,N,N],[5,"brpc_controller_error_code",E,E,N,N],[5,"brpc_controller_set_failed",E,E,N,N],[5,"brpc_controller_get_request_attachment",E,E,N,N],[5,"brpc_controller_get_response_attachment",E,E,N,N],[0,"zero_copy",R[0],E,N,N],[3,R[12],R[11],E,N,N],[3,R[13],E,E,N,N],[4,R[20],E,E,N,N],[4,R[21],E,E,N,N],[5,"zero_copy_buf_new",E,E,N,N],[5,"zero_copy_buf_mut_new",E,E,N,N],[5,"zero_copy_buf_remaining",E,E,N,N],[5,"zero_copy_buf_bytes",E,E,N,N],[5,"zero_copy_buf_advance",E,E,N,N],[5,"zero_copy_buf_mut_remaining",E,E,N,N],[5,"zero_copy_buf_mut_bytes",E,E,N,N],[5,"zero_copy_buf_mut_advance",E,E,N,N],[11,R[1],E,E,0,[[],["self"]]],[11,R[2],E,E,0,[[],["self"]]],[11,R[1],E,E,1,[[],["self"]]],[11,R[2],E,E,1,[[],["self"]]],[11,"from",R[3],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[10]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[10]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[10]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[10]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[10]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[10]]]],[11,"from",R[11],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[10]]]],[11,"into_buf",E,E,0,[[],[T]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[10]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[10]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[10]]]],[11,"remaining",E,E,0,[[["self"]],["usize"]]],[11,"bytes",E,E,0,[[["self"]]]],[11,"advance",E,E,0,[[["self"],["usize"]]]],[11,"remaining_mut",E,E,1,[[["self"]],["usize"]]],[11,"bytes_mut",E,E,1,[[["self"]]]],[11,"advance_mut",E,E,1,[[["self"],["usize"]]]]],"p":[[3,R[12]],[3,R[13]],[4,R[14]],[4,R[15]],[4,R[16]],[4,R[17]],[4,R[18]],[4,R[19]],[4,R[20]],[4,R[21]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);